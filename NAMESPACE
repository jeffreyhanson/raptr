# Generated by roxygen2: do not edit by hand

S3method("amount.target<-",RapData)
S3method("amount.target<-",RapUnsolOrSol)
S3method("names<-",RapData)
S3method("names<-",RapUnsolOrSol)
S3method("space.target<-",RapData)
S3method("space.target<-",RapUnsolOrSol)
S3method(SpatialPolygons2PolySet,SpatialPolygons)
S3method(SpatialPolygons2PolySet,SpatialPolygonsDataFrame)
S3method(amount.held,RapSolved)
S3method(amount.target,RapData)
S3method(amount.target,RapUnsolOrSol)
S3method(as.list,GurobiOpts)
S3method(basemap,RapSolved)
S3method(calcBoundaryData,PolySet)
S3method(calcBoundaryData,SpatialPolygons)
S3method(calcSpeciesAverageInPus,SpatialPolygons)
S3method(calcSpeciesAverageInPus,SpatialPolygonsDataFrame)
S3method(dp.subset,RapData)
S3method(dp.subset,RapUnsolOrSol)
S3method(logging.file,RapResults)
S3method(logging.file,RapSolved)
S3method(maximum.targets,RapUnsolOrSol)
S3method(names,RapData)
S3method(names,RapUnsolOrSol)
S3method(print,AttributeSpace)
S3method(print,AttributeSpaces)
S3method(print,GurobiOpts)
S3method(print,ManualOpts)
S3method(print,RapData)
S3method(print,RapReliableOpts)
S3method(print,RapResults)
S3method(print,RapSolved)
S3method(print,RapUnreliableOpts)
S3method(print,RapUnsolved)
S3method(prob.subset,RapData)
S3method(prob.subset,RapUnsolOrSol)
S3method(pu.subset,RapData)
S3method(pu.subset,RapUnsolOrSol)
S3method(score,RapResults)
S3method(score,RapSolved)
S3method(selections,RapResults)
S3method(selections,RapSolved)
S3method(sim.space,RasterLayer)
S3method(sim.space,SpatialPolygons)
S3method(sim.species,RasterLayer)
S3method(sim.species,SpatialPolygons)
S3method(space.held,RapSolved)
S3method(space.plot,RapData)
S3method(space.plot,RapSolved)
S3method(space.plot,RapUnsolved)
S3method(space.target,RapData)
S3method(space.target,RapUnsolOrSol)
S3method(spp.plot,RapData)
S3method(spp.plot,RapSolved)
S3method(spp.plot,RapUnsolved)
S3method(spp.subset,RapData)
S3method(spp.subset,RapUnsolOrSol)
S3method(summary,RapSolved)
S3method(update,GurobiOpts)
S3method(update,ManualOpts)
S3method(update,RapData)
S3method(update,RapReliableOpts)
S3method(update,RapUnreliableOpts)
S3method(update,RapUnsolOrSol)
export("amount.target<-")
export("space.target<-")
export(AttributeSpace)
export(AttributeSpaces)
export(DemandPoints)
export(GurobiOpts)
export(ManualOpts)
export(PlanningUnitPoints)
export(RapData)
export(RapReliableOpts)
export(RapResults)
export(RapSolved)
export(RapUnreliableOpts)
export(RapUnsolved)
export(SpatialPolygons2PolySet)
export(amount.held)
export(amount.target)
export(blank.raster)
export(calcBoundaryData)
export(calcSpeciesAverageInPus)
export(dp.subset)
export(is.GurobiInstalled)
export(logging.file)
export(make.DemandPoints)
export(make.RapData)
export(maximum.targets)
export(prob.subset)
export(pu.subset)
export(randomPoints)
export(rap)
export(rrap.proportion.held)
export(score)
export(selections)
export(sim.pus)
export(sim.space)
export(sim.species)
export(solve)
export(space.held)
export(space.plot)
export(space.target)
export(spp.plot)
export(spp.subset)
export(summary)
export(urap.proportion.held)
exportClasses(AttributeSpace)
exportClasses(DemandPoints)
exportClasses(GurobiOpts)
exportClasses(ManualOpts)
exportClasses(PlanningUnitPoints)
exportClasses(PolySet)
exportClasses(RapData)
exportClasses(RapOpts)
exportClasses(RapReliableOpts)
exportClasses(RapResults)
exportClasses(RapSolved)
exportClasses(RapUnreliableOpts)
exportClasses(RapUnsolved)
exportClasses(SolverOpts)
import(raster)
import(sp)
importFrom(Matrix,solve)
importFrom(rgdal,readOGR)
importFrom(withr,with_locale)
useDynLib(raptr, .registration = TRUE)
