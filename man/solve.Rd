% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/RaspSolved.R, R/RaspUnsolved.R, R/generics.R
\docType{methods}
\name{solve,RaspSolved-method}
\alias{solve}
\alias{solve,RaspSolved-method}
\alias{solve,RaspUnsolved-method}
\title{Solve RASP object}
\usage{
\S4method{solve}{RaspSolved}(x, wd = tempdir(), clean = TRUE,
  force.reset = FALSE)

\S4method{solve}{RaspUnsolved}(x, wd = tempdir(), clean = TRUE)

solve(x, ...)
}
\arguments{
\item{x}{\code{RaspUnsolved} or \code{RaspSolved} object.}

\item{wd}{\code{character} file path to a working directory, this is a temporary directory by default to avoid pollution.}

\item{clean}{\code{logical} delete files once processing completed?}

\item{force.reset}{\code{logical} should solutions be recalculated even if \code{RaspSolved} object supplied?}

\item{...}{not used.}
}
\value{
\code{RaspSolved} object
}
\description{
This function uses Gurobi to find prioritisations using the input parameter and data stored in a \code{RaspUsolved} object,
and returns a \code{RaspSolved} object with outputs in it.
}
\section{Methods (by class)}{
\itemize{
\item \code{RaspSolved}: 

\item \code{RaspUnsolved}: 
}}
\note{
This function is used to solve a \code{RaspUnsolved} object that has all of its inputs generated. The rasp function (without lower case 'r') provides a more general interface for generating inputs and outputs.
}

