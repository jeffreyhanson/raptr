% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/RaspData.R
\name{RaspData}
\alias{RaspData}
\title{Create new RaspData object}
\usage{
RaspData(pu, species, pu.species.probabilities, attribute.spaces, boundary,
  polygons = NULL, skipchecks = FALSE, .cache = new.env())
}
\arguments{
\item{pu}{\code{data.frame} planning unit data. Columns are 'cost' (\code{numeric}), 'area' (\code{numeric}), and 'status' (\code{integer}).}

\item{species}{\code{data.frame} with species data. Columns are 'area.target' (\code{numeric}), 'space.target' (\code{numeric}), and 'name' (\code{character}, optional).}

\item{pu.species.probabilities}{\code{data.frame} with data on the probability of species in each planning unit. Columns are 'species' (\code{integer}), 'pu' (\code{integer}), and 'value' (\code{numeric}) columns.}

\item{attribute.spaces}{\code{list} of \code{AttributeSpace} objects with the demand points and planning unit coordinates.}

\item{boundary}{\code{data.frame} with data on the shared boundary length of planning units. Columns are with 'id1' (\code{integer}), 'id2' (\code{integer}), and 'boundary' (\code{integer}).}

\item{polygons}{\code{PolySet} planning unit spatial data or \code{NULL} if data not available.}

\item{skipchecks}{\code{logical} Skip data integrity checks? May improve speed for big data sets.}

\item{.cache}{\code{environment} used to cache calculations.}
}
\value{
RaspData object
}
\description{
This function creates a "RaspData" object using pre-processed data.
}
\note{
Generally, users are not encouraged to change arguments to \code{.cache}.
}
\examples{
\dontrun{
# create data for RaspData object
data(cs_pus, cs_spp, cs_space)
attribute.spaces=list(
	AttributeSpace(
		pu=SimplePoints(rgeos::gCentroid(cs_pus[1:10,], byid=TRUE)@coords),
		dp=list(
			make.DemandPoints(
				SpatialPoints(
					coords=dismo::randomPoints(
						cs_spp,
						n=10,
						prob=TRUE
					)
				),
				NULL
			)
		)
	),
	AttributeSpace(
		pu=SimplePoints(extract(cs_space[[1]],cs_pus[1:10,],fun=mean)),
		dp=list(
			make.DemandPoints(
				SpatialPoints(
					coords=dismo::randomPoints(
						cs_spp,
						n=10,
						prob=TRUE
					)
				),
				cs_space[[1]]
			)
		)
	)
)
pu.species.probabilities=calcSpeciesAverageInPus(cs_pus[1:10,], cs_spp)
polygons=SpatialPolygons2PolySet(cs_pus[1:10,])
boundary=calcBoundaryData(cs_pus[1:10,])

x<-RaspData(
	pu=cs_pus@data[1:10,],
	species=data.frame(area.target=0.2, space.target=0.2, name='test'),
	pu.species.probabilities=pu.species.probabilities,
	attribute.spaces=attribute.spaces,
	polygons=polygons,
	boundary=boundary
)
print(x)
}
}
\seealso{
\code{\link[PBSmapping]{PolySet}}, \code{\link[sp]{SpatialPoints}}, \code{\link[sp]{SpatialPointsDataFrame}}, \code{\link{make.RaspData}}, \code{\link{RaspData-class}}.
}

