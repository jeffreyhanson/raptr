% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/GurobiOpts.R, R/RaspData.R, R/RaspReliableOpts.R, R/RaspSolved.R, R/RaspUnreliableOpts.R, R/RaspUnsolved.R, R/generics.R
\name{update.GurobiOpts}
\alias{update}
\alias{update.GurobiOpts}
\alias{update.RaspData}
\alias{update.RaspReliableOpts}
\alias{update.RaspSolved}
\alias{update.RaspUnreliableOpts}
\alias{update.RaspUnsolved}
\title{Update object}
\usage{
\method{update}{GurobiOpts}(object, ..., ignore.extra = FALSE)

\method{update}{RaspData}(object, ..., ignore.extra = FALSE)

\method{update}{RaspReliableOpts}(object, ..., ignore.extra = FALSE)

\method{update}{RaspSolved}(object, ..., solve = TRUE)

\method{update}{RaspUnreliableOpts}(object, ..., ignore.extra = FALSE)

\method{update}{RaspUnsolved}(object, ..., solve = TRUE)
}
\arguments{
\item{object}{\code{GurobiOpts}, \code{RaspUnreliableOpts}, \code{RaspReliableOpts}, \code{RaspData}, \code{RaspUnsolved}, or \code{RaspSolved} object..}

\item{...}{parameters to update.}

\item{ignore.extra}{\code{logical} should extra invalid arguments be ignored? Defaults to \code{FALSE}.}

\item{solve}{\code{logical} should the problem be solved? This argument is only valid for \code{RaspUnsolved} and \code{RaspSolved} objects. Defaults to \code{TRUE}.}
}
\value{
\code{GurobiOpts}, \code{RaspUnreliableOpts}, \code{RaspReliableOpts}, \code{RaspData}, or \code{RaspUnsolved} object depending on \code{x}.
}
\description{
This function updates parameters or data stored in an existing \code{GurobiOpts}, \code{RaspUnreliableOpts}, \code{RaspReliableOpts}, \code{RaspData}, \code{RaspUnsolved}, or \code{RaspSolved} object.
}
\examples{
# load data
data(sim_ru, sim_rs)

# GurobiOpts
x <- GurobiOpts(MIPGap=0.7)
y <- update(x, MIPGap=0.1)
print(x)
print(y)

# RaspUnreliableOpts
x <- RaspUnreliableOpts(BLM=10)
y <- update(x, BLM=2)
print(x)
print(y)

# RaspReliableOpts
x <- RaspReliableOpts(FAILUREMULTIPLIER=2)
y <- update(x, FAILUREMULTIPLIER=4)
print(x)
print(y)

# RaspData
x <- sim_ru@data
y <- update(x, space.targets=c(0.4, 0.7, 0.1))
print(x@data$space.targets)
print(y@data$space.targets)

## RaspUnsolved
x <- sim_ru
y <- update(x, area.targets=c(0.1, 0.2, 0.3), BLM=3, Presolve=0L)
# print x parameters
print(x@opts@BLM); print(x@solver@Presolve); print(x@data@species$area.targets)
# print y parameters
print(y@opts@BLM); print(y@solver@Presolve); print(y@data@species$area.targets)

## RaspSolved
x <- sim_rs
y <- update(x, space.targets=c(0.4, 0.6, 0.9), BLM=100, Presolve=1L)
# print x parameters
print(x@opts@BLM); print(x@solver@Presolve); print(x@data@species$area.targets)
# print y parameters
print(y@opts@BLM); print(y@solver@Presolve); print(y@data@species$area.targets)
}
\seealso{
\code{GurobiOpts}, \code{RaspUnreliableOpts}, \code{RaspReliableOpts}, \code{RaspData}, or \code{RaspUnsolved}.
}

